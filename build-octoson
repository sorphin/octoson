#!/bin/bash

# TODOs:
# Add support for building Dockerfile. Current command is:
# docker build . -f Dockerfile.ubuntu_trusty-pyro64-htot -t vincent/ubuntu14-yocto:pyro64

set -o errexit
set -o xtrace

script="${0##*/}"

print_date ()
{
    date -I
}

usage ()
{
    echo "Try $script --help for more information"
}

do_clone ()
{
    local dirname="$1"
    local branch="$2"
    cd $dirname
    git clone https://github.com/htot/meta-intel-edison.git -b $branch
    ln -s meta-intel-edison/utils/Makefile.mk Makefile
}

do_clone=1
while [ "$#" -ne "0" ]; do
    case $1 in
        # Work dir allows to specify full path to working clone, when not
        # recloning.
        --work-dir)
            shift
            work_dir="$1"
            ;;
        # Root dir is where repo should live after being cloned.
        --root-dir)
            shift
            root_dir="$1"
            ;;
        --docker-dir)
            # Can be omitted for now, as building the Docker container is not
            # implemented by the script
            shift
            docker_dir="$1"
            ;;
        --no-clone)
            do_clone=0
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            echo "Unknown argument $1!"
            exit 1
     esac
     shift
done

docker_tag="vincent/ubuntu14-yocto:pyro64"

base="htot-meta-intel-edison"
branch="pyro64-acpi"

if [[ ! -z "$work_dir" && ! -z "$root_dir" ]]; then
    echo "Cannot set both root and work dir"
    exit 1
fi

if [[ -z "$work_dir" ]]; then
    work_dir="$root_dir/${base}_${branch}_$(print_date)"
fi
work_dir="$(readlink -f $work_dir)"

if [[ ! -d "$work_dir" ]]; then
    mkdir $work_dir
fi
if [[ "$do_clone" == 1 ]]; then
    do_clone $work_dir $branch
fi
echo "Directory setup under $work_dir"

sudo docker run -i -t -v $work_dir:/yocto $docker_tag
